1. Покажите два способа объявления одномерного массива, состоящего из 12 элементов типа double.

В Java существует несколько способов объявления массива. Вот два из них:
- Первый способ: Объявление массива с последующей инициализацией.

double[] array = new double[12];  // Создается массив на 12 элементов

- Второй способ: Объявление и инициализация массива сразу.

double[] array = {0.0, 1.1, 2.2, 3.3, 4.4, 5.5, 6.6, 7.7, 8.8, 9.9, 10.10, 11.11};

2. Покажите все варианты, которыми можно воспользоваться для инициализации элементов одномерного массива целочисленными значениями от 1 до 5.

Для инициализации массива целыми числами от 1 до 5 можно использовать несколько подходов:
- Вариант 1: Инициализация массива вручную:

int[] array = {1, 2, 3, 4, 5};

- Вариант 2: Использование цикла для автоматической инициализации:

int[] array = new int[5];
for (int i = 0; i < array.length; i++) {
    array[i] = i + 1;  // Заполнение значениями от 1 до 5
}

- Вариант 3: Инициализация с помощью метода Arrays.fill():

int[] array = new int[5];
Arrays.fill(array, 1);  // Все элементы массива будут равны 1

3. Напишите программу, в которой массив используется для нахождения среднего арифметического десяти значений типа double. Используйте любые десять чисел.

Пример программы:

public class AverageCalculator {
    public static void main(String[] args) {
        double[] numbers = {1.1, 2.2, 3.3, 4.4, 5.5, 6.6, 7.7, 8.8, 9.9, 10.0};
        double sum = 0;

        for (int i = 0; i < numbers.length; i++) {
            sum += numbers[i];
        }

        double average = sum / numbers.length;
        System.out.println("Среднее арифметическое: " + average);
    }
}

4. Напишите программу, которая сортирует массив символьных строк в лексикографическом порядке по убыванию и по возрастанию. Продемонстрируйте её работу.

Пример программы:

import java.util.Arrays;
import java.util.Collections;

public class StringSorter {
    public static void main(String[] args) {
        String[] strings = {"apple", "banana", "orange", "kiwi"};

        // Сортировка по возрастанию
        Arrays.sort(strings);
        System.out.println("Сортировка по возрастанию: " + Arrays.toString(strings));

        // Сортировка по убыванию
        Arrays.sort(strings, Collections.reverseOrder());
        System.out.println("Сортировка по убыванию: " + Arrays.toString(strings));
    }
}

5. В чем состоит разница между методами indexOf() и lastIndexOf() класса String?

- indexOf() возвращает индекс первого вхождения указанной подстроки или символа в строке.
- lastIndexOf() возвращает индекс последнего вхождения указанной подстроки или символа в строке.

Пример:

String text = "hello world hello";
System.out.println(text.indexOf("hello"));       // Выведет 0
System.out.println(text.lastIndexOf("hello"));   // Выведет 12

6. Перепишите приведенную ниже последовательность операторов, воспользовавшись тернарным оператором.

Исходный код:

if (x < 0) {
    y = 10;
} else {
    y = 20;
}

Решение с использованием тернарного оператора:

y = (x < 0) ? 10 : 20;

8. Является ли ошибкой превышение верхней границы массива?

Да, в Java превышение верхней границы массива является ошибкой времени выполнения, которая приводит к исключению ArrayIndexOutOfBoundsException.

Пример:

int[] array = new int[5];
array[5] = 10;  // Ошибка: ArrayIndexOutOfBoundsException

9. Является ли ошибкой использование отрицательных значений индекса для доступа к элементам массива?

Да, использование отрицательных индексов для доступа к элементам массива также вызывает исключение ArrayIndexOutOfBoundsException.

Пример:

int[] array = new int[5];
array[-1] = 10;  // Ошибка: ArrayIndexOutOfBoundsException

10. Можно ли управлять оператором switch с помощью объектов типа String? Если да, то напишите пример такого использования.

Да, начиная с Java 7, оператор switch поддерживает работу с объектами типа String. Вот пример:

public class SwitchExample {
    public static void main(String[] args) {
        String day = "Monday";

        switch (day) {
            case "Monday":
                System.out.println("Это понедельник");
                break;
            case "Tuesday":
                System.out.println("Это вторник");
                break;
            default:
                System.out.println("Другой день недели");
                break;
        }
    }
}

Этот код выведет: "Это понедельник".