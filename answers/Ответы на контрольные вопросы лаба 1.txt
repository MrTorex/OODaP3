1. Что такое поток в языке C++?

Поток в языке C++ представляет собой объект, который обеспечивает ввод и вывод данных. Потоки бывают различных типов в зависимости от назначения: входные потоки (для чтения данных), выходные потоки (для записи данных), а также потоковые классы, которые поддерживают чтение и запись данных одновременно.

2. Какой класс является базовым для большинства потоковых классов?

Базовым классом для большинства потоковых классов является класс ios_base.

3. Истинно ли утверждение «потоки делятся на входные и выходные»?

Да, это утверждение истинно. В языке C++ потоки делятся на входные (например, cin для ввода с клавиатуры) и выходные (например, cout для вывода на экран).

4. Что определяет флаг skipws при его использовании с объектом cin?

Флаг skipws заставляет объект cin игнорировать начальные пробелы (whitespace) при считывании данных из входного потока.

5. Напишите сигнатуру функции main(), позволяющую программе использовать аргументы командной строки.

int main(int argc, char* argv[])

Здесь argc — количество аргументов командной строки, а argv — массив указателей на эти аргументы.

6. Что собой представляют стандартные потоки ввода и вывода?

Стандартные потоки ввода и вывода включают в себя cin (стандартный поток ввода с клавиатуры) и cout (стандартный поток вывода на экран), а также cerr и clog для вывода ошибок.

7. Какой заголовочный файл необходимо подключить для работы с потоками ввода/вывода?

Для работы с потоками ввода/вывода необходимо подключить заголовочный файл <iostream>.

8. Что представляет собой поток форматированного вывода? Какие функции обеспечивают форматированный вывод?

Поток форматированного вывода представляет собой поток, который позволяет управлять выводом данных в заданном формате. Для этого используются функции, такие как setf(), unsetf(), и манипуляторы из заголовочного файла <iomanip>, например, std::setw(), std::setprecision(), std::fixed и другие.

9. Для чего предназначена библиотека ввода/вывода iomanip?

Библиотека iomanip предназначена для управления форматированием вывода данных в потоках ввода/вывода. Она предоставляет манипуляторы, такие как setw(), setprecision(), setfill(), которые используются для форматирования вывода.

10. Напишите оператор, который позволит считать с консоли строку данных.

std::string input;
std::cin >> std::noskipws; // Отключаем игнорирование пробелов
std::cin >> input;